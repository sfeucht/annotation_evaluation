import numpy as np
from sklearn.cluster import KMeans
from time import time
from sklearn import metrics
import matplotlib.pyplot as plt
from sklearn.datasets import make_blobs
import seaborn as sns
import pandas as pd
from collections import Counter
import matplotlib.font_manager


ids = [241120231445, 241120231451, 80521230830, 51020131203, 51020131150, 241120225341, 241120225355, 51020131146, 6104, 80521231127, 80521231255, 51020131157, 2945, 80521231042, 241120225347, 80521231054, 51020131154, 80521231647, 80521231350, 80521231423, 50121173515, 50121172353, 50121173059, 50121172347, 170321174903, 170321174917, 170321174901, 170321174915, 50121173259, 50121173517, 50121173311, 50421175407, 50121173112, 80521230925, 50421174917, 80521231636, 170321175405, 241120225337, 7321, 170321175401, 80521230841, 291220224405, 50121173301, 291020230444, 50121172341, 170321174905, 80521231551, 170321174907, 50121172357, 50121173511, 50121173303, 50121173101, 20741, 91120113038, 170321175359, 170321175403, 80521231211, 50121173509, 50121173521, 291020230502, 291220224351, 91120113020, 170321175357, 91120113022, 80521231602, 291220224353, 291220224347, 50121173523, 291020230448, 170321174909, 170321175346, 50121172349, 50121173527, 291020230458, 291020230504, 80521230914, 170321175353, 241120225339, 170321175351, 91120113030, 291220224355, 50121173120, 50121173109, 50121173519, 170321175344, 91120113042, 80521231138, 291220224327, 80521231306, 80521230958, 241120231505, 80521231339, 17142, 241120231507, 291220224331, 91120113040, 241120225359, 291220224335, 241120231503, 80521231507, 241120231501, 291220224337, 501211723551, 2411202314491, 2912202243290, 805212314450, 241120225343, 241120225357, 291220224339, 241120231447, 241120231453, 241120231457, 51020131205, 241120225351, 241120225345, 241120225353, 80521231518, 29666, 241120231455, 170321175407, 291220224403, 291220224359, 50121173105, 50121173307, 50121172351, 50121172345, 50121173305, 50121173107, 291220224401, 80521231222, 11776, 50121173116, 50421174913, 50121173103, 170321174859, 50121173315, 50121173507, 50121173513, 80521231009, 170321174911, 50121172343, 50121173114, 291220224407, 291220224349, 24432, 50121173118, 291220224345, 91120113034, 50421174857, 50121173319, 291020230500, 50121172359, 170321174919, 50121173309, 291220224343, 291220224357, 91120113032, 91120113026, 291220224341, 50121173257, 291220224333, 241120231459, 241120225349, 6518, 51020131152, 51020131144, 501211723550, 2411202314490, 2912202243291, 805212314451, 51020131142, 91120113028, 291020230442, 291020230450, 50121172355, 291020230452, 91120113036, 22886, 41729, 51020131148]
id_to_index = dict(zip(ids, range(len(ids))))

narratives = [0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0]
arguments = [1, 0, 1, 1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 1, 1, 1, 0, 1, 0, 0, 0, 1, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 1, 0]

all_matrix = {
    'BOUNDED EVENT (SPECIFIC)' : [2, 11, 0, 0, 0, 11, 19, 0, 2, 3, 0, 5, 0, 2, 9, 0, 1, 0, 0, 3, 2, 15, 3, 1, 10, 38, 8, 6, 18, 3, 10, 7, 19, 0, 6, 7, 36, 8, 0, 1, 1, 1, 10, 9, 13, 6, 3, 3, 11, 17, 12, 9, 2, 2, 2, 2, 1, 0, 7, 8, 1, 9, 3, 1, 4, 0, 1, 5, 6, 0, 20, 7, 21, 20, 15, 2, 2, 9, 2, 4, 1, 9, 17, 3, 5, 24, 10, 7, 0, 0, 30, 3, 0, 18, 0, 16, 9, 3, 6, 0, 12, 1, 12, 33, 8, 0, 7, 28, 3, 9, 11, 7, 0, 9, 5, 13, 0, 0, 7, 7, 0, 3, 9, 24, 6, 8, 1, 22, 8, 0, 0, 27, 9, 8, 13, 45, 42, 2, 2, 24, 45, 14, 0, 0, 0, 39, 5, 21, 1, 11, 10, 12, 8, 3, 0, 1, 9, 5, 1, 0, 3, 5, 1, 0, 2, 0, 10, 33, 8, 0, 0, 13, 4, 23, 9, 3, 17, 0, 0, 0],
    'BOUNDED EVENT (GENERIC)' : [0, 0, 0, 0, 0, 0, 3, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 3, 0, 3, 2, 2, 3, 1, 2, 1, 4, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 3, 8, 1, 0, 1, 0, 0, 2, 1, 2, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 4, 2, 1, 12, 0, 2, 2, 5, 3, 1, 0, 3, 4, 0, 2, 8, 9, 0, 5, 0, 3, 0, 0, 0, 0, 7, 0, 2, 1, 0, 1, 0, 0, 0, 0, 4, 3, 0, 1, 0, 1, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 4, 1, 0, 0, 0, 7, 0, 0, 5, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 2, 0, 4, 0, 1, 7, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 3, 1, 0, 0, 0, 12, 0, 1, 3, 0, 1, 0, 0, 0],
    'UNBOUNDED EVENT (SPECIFIC)' : [7, 4, 0, 0, 4, 7, 12, 2, 7, 2, 0, 4, 1, 5, 11, 2, 2, 0, 1, 0, 6, 6, 0, 6, 3, 17, 3, 0, 1, 0, 3, 5, 4, 0, 0, 2, 17, 4, 1, 6, 4, 2, 1, 1, 6, 3, 0, 0, 2, 23, 6, 6, 2, 2, 2, 0, 1, 2, 1, 1, 5, 8, 5, 4, 3, 2, 2, 10, 10, 3, 8, 0, 3, 11, 12, 1, 3, 2, 1, 4, 1, 3, 5, 8, 3, 5, 8, 9, 0, 1, 18, 1, 0, 10, 1, 9, 4, 7, 0, 1, 5, 2, 2, 8, 2, 0, 1, 5, 1, 4, 9, 1, 0, 2, 7, 6, 0, 1, 1, 0, 2, 0, 1, 1, 5, 2, 2, 8, 7, 0, 4, 7, 1, 1, 2, 10, 3, 0, 1, 3, 9, 3, 1, 3, 0, 4, 1, 3, 0, 0, 4, 5, 1, 0, 4, 1, 2, 0, 0, 0, 2, 3, 2, 0, 2, 1, 0, 10, 0, 0, 0, 4, 1, 3, 1, 1, 1, 2, 1, 0],
    'BASIC STATE' : [1, 4, 2, 16, 5, 12, 3, 4, 18, 8, 5, 15, 5, 10, 11, 8, 9, 4, 5, 6, 10, 14, 2, 6, 8, 48, 9, 6, 10, 4, 2, 14, 12, 2, 7, 15, 13, 13, 4, 4, 3, 17, 4, 11, 12, 17, 5, 12, 11, 56, 47, 32, 2, 6, 8, 2, 4, 2, 3, 10, 11, 15, 14, 6, 6, 3, 10, 11, 21, 4, 14, 0, 9, 26, 13, 2, 2, 1, 1, 11, 6, 5, 8, 7, 7, 16, 9, 10, 7, 6, 20, 15, 8, 5, 0, 20, 8, 15, 3, 4, 6, 10, 14, 15, 9, 3, 6, 22, 5, 4, 13, 4, 8, 5, 21, 17, 0, 7, 3, 3, 8, 5, 6, 14, 7, 2, 13, 15, 16, 0, 16, 7, 5, 7, 43, 46, 30, 2, 6, 22, 40, 7, 8, 3, 22, 14, 8, 7, 8, 11, 29, 20, 17, 2, 4, 5, 7, 4, 11, 3, 11, 1, 5, 12, 7, 9, 16, 17, 8, 3, 4, 46, 13, 20, 18, 16, 6, 7, 11, 0],
    'COERCED STATE (SPECIFIC)' : [4, 3, 0, 2, 1, 9, 1, 1, 1, 4, 4, 4, 1, 5, 3, 5, 4, 0, 3, 2, 2, 7, 0, 2, 1, 9, 2, 0, 3, 1, 0, 3, 5, 0, 0, 3, 9, 2, 1, 0, 0, 6, 0, 0, 6, 1, 2, 3, 0, 41, 5, 0, 2, 3, 1, 1, 4, 0, 1, 5, 3, 1, 2, 3, 5, 0, 7, 1, 0, 0, 11, 0, 0, 7, 3, 0, 2, 7, 0, 0, 1, 1, 4, 0, 7, 0, 4, 0, 0, 13, 6, 1, 0, 4, 1, 13, 1, 4, 0, 0, 0, 1, 2, 3, 0, 0, 0, 4, 2, 0, 4, 3, 5, 0, 7, 6, 0, 0, 0, 1, 1, 0, 3, 0, 2, 0, 0, 6, 2, 0, 1, 0, 0, 0, 1, 6, 5, 1, 0, 1, 13, 0, 1, 1, 0, 2, 1, 3, 1, 1, 8, 2, 0, 0, 3, 1, 1, 0, 0, 1, 1, 0, 1, 0, 5, 2, 0, 1, 1, 0, 0, 4, 1, 1, 1, 0, 0, 2, 2, 0],
    'COERCED STATE (GENERIC)' : [1, 2, 8, 8, 8, 1, 11, 1, 2, 7, 3, 5, 8, 4, 2, 6, 4, 10, 4, 9, 10, 10, 0, 8, 1, 0, 19, 6, 4, 0, 1, 5, 1, 8, 0, 7, 2, 0, 6, 3, 2, 1, 0, 5, 2, 2, 4, 15, 4, 18, 40, 1, 3, 8, 0, 1, 3, 0, 2, 2, 0, 2, 2, 1, 4, 4, 1, 5, 0, 4, 5, 0, 2, 12, 12, 2, 3, 0, 0, 4, 5, 6, 3, 5, 5, 7, 1, 7, 4, 3, 0, 4, 0, 3, 3, 10, 0, 6, 0, 2, 0, 8, 3, 1, 1, 4, 0, 1, 6, 0, 2, 0, 6, 0, 4, 5, 6, 0, 0, 0, 2, 2, 2, 11, 0, 2, 2, 5, 0, 4, 6, 5, 3, 0, 13, 0, 15, 1, 6, 1, 6, 2, 5, 0, 0, 1, 0, 4, 8, 0, 14, 10, 2, 5, 3, 8, 4, 0, 4, 5, 2, 0, 0, 0, 1, 7, 7, 0, 1, 8, 7, 8, 3, 6, 2, 4, 0, 0, 5, 3],
    'PERFECT COERCED STATE (SPECIFIC)' : [2, 1, 0, 0, 0, 1, 2, 0, 3, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 2, 5, 0, 0, 0, 6, 1, 0, 1, 0, 2, 0, 1, 0, 0, 1, 5, 0, 0, 0, 3, 1, 3, 2, 11, 3, 1, 0, 3, 6, 1, 0, 0, 3, 0, 0, 1, 0, 1, 4, 2, 0, 1, 1, 2, 0, 2, 0, 0, 0, 1, 1, 0, 3, 3, 0, 1, 0, 0, 0, 0, 1, 1, 1, 3, 2, 4, 0, 0, 0, 0, 0, 0, 2, 1, 2, 2, 2, 0, 0, 0, 1, 0, 4, 1, 0, 1, 0, 0, 0, 1, 2, 0, 0, 1, 2, 0, 0, 2, 0, 0, 2, 2, 3, 1, 0, 2, 0, 3, 0, 0, 0, 1, 1, 2, 10, 7, 0, 0, 2, 9, 2, 0, 1, 0, 5, 0, 4, 0, 1, 4, 3, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 0, 4, 0, 0, 0, 10, 0, 5, 0, 1, 2, 0, 0, 0],
    'PERFECT COERCED STATE (GENERIC)' : [0, 0, 1, 0, 0, 0, 4, 2, 2, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 1, 0, 2, 0, 2, 1, 0, 0, 0, 0, 2, 0, 0, 1, 4, 0, 0, 1, 2, 1, 0, 5, 4, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 1, 0, 1, 0, 2, 0, 1, 0, 0, 6, 1, 3, 0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 3, 1, 2, 4, 0, 2, 0, 1, 0, 0, 3, 0, 1, 2, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 1, 1, 0, 0, 3, 0, 2, 1, 1, 0, 0, 0, 2, 2, 0, 5, 0, 0, 0, 2, 0, 0, 1, 6, 1, 0, 0, 2, 1, 0, 0, 0, 0, 0, 2, 0, 0, 0, 2, 0, 1, 0, 2, 12, 3, 1, 2, 0, 0, 0, 0, 0],
    'GENERIC SENTENCE (HABITUAL)' : [3, 1, 0, 0, 0, 0, 8, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 4, 0, 2, 0, 7, 0, 1, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 5, 0, 0, 0, 0, 2, 5, 1, 0, 0, 0, 3, 0, 4, 0, 2, 0, 1, 1, 0, 1, 0, 0, 0, 0, 3, 0, 5, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 0, 0, 1, 0, 3, 1, 1, 0, 0, 0, 0, 0, 4, 2, 1, 0, 0, 0, 2, 1, 1, 0, 0, 0, 0, 1, 3, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    'GENERIC SENTENCE (STATIC)' : [12, 1, 9, 24, 11, 0, 19, 10, 4, 10, 9, 6, 22, 2, 5, 8, 11, 10, 8, 9, 9, 6, 2, 10, 8, 7, 29, 7, 15, 0, 6, 12, 0, 6, 1, 6, 7, 3, 8, 8, 10, 4, 0, 11, 7, 9, 22, 48, 23, 18, 54, 15, 7, 2, 1, 16, 7, 0, 4, 3, 9, 5, 9, 9, 9, 10, 7, 2, 26, 2, 7, 0, 2, 24, 19, 7, 4, 0, 0, 8, 12, 9, 9, 12, 11, 16, 4, 17, 8, 11, 11, 3, 32, 1, 4, 16, 2, 8, 0, 16, 2, 5, 11, 4, 2, 13, 0, 8, 11, 0, 2, 1, 4, 0, 12, 3, 28, 2, 0, 0, 15, 8, 4, 36, 2, 3, 11, 14, 3, 13, 3, 4, 33, 0, 87, 7, 19, 20, 17, 28, 13, 23, 14, 15, 1, 2, 4, 8, 46, 4, 24, 20, 17, 15, 9, 14, 8, 6, 11, 4, 16, 1, 6, 8, 3, 4, 14, 4, 4, 16, 13, 55, 17, 2, 8, 17, 1, 21, 13, 15],
    'GENERIC SENTENCE (DYNAMIC)' : [5, 0, 3, 5, 3, 0, 9, 3, 6, 0, 2, 3, 6, 0, 1, 3, 3, 4, 1, 5, 1, 4, 0, 0, 6, 0, 7, 1, 6, 0, 10, 12, 0, 4, 2, 5, 5, 1, 2, 2, 1, 0, 0, 2, 2, 2, 6, 21, 3, 5, 29, 4, 10, 1, 0, 1, 4, 0, 3, 2, 3, 0, 1, 0, 5, 2, 0, 5, 13, 0, 0, 0, 0, 14, 6, 7, 3, 0, 0, 8, 1, 9, 6, 8, 5, 10, 0, 6, 3, 6, 2, 4, 1, 1, 2, 7, 1, 0, 0, 2, 2, 2, 3, 0, 3, 11, 0, 1, 3, 1, 3, 0, 2, 0, 5, 0, 7, 3, 0, 0, 10, 0, 1, 9, 2, 6, 3, 3, 1, 11, 10, 0, 2, 0, 30, 1, 8, 0, 5, 5, 4, 5, 5, 15, 0, 0, 4, 10, 18, 0, 4, 22, 4, 0, 0, 1, 0, 0, 1, 1, 12, 0, 3, 6, 5, 6, 1, 0, 6, 5, 1, 10, 0, 2, 5, 0, 0, 9, 1, 3],
    'GENERALIZING SENTENCE (DYNAMIC)' : [3, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 3, 0, 0, 2, 0, 0, 0, 0, 2, 0, 0, 0, 5, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 5, 1, 0, 0, 0, 0, 0, 0, 3, 1, 2, 0, 0, 15, 15, 4, 1, 0, 2, 0, 0, 0, 0, 0, 0, 0, 4, 0, 2, 1, 0, 2, 0, 0, 0, 0, 0, 3, 6, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 9, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 1, 6, 0, 6, 0, 0, 1, 1, 0, 2, 1, 3, 1, 0, 0, 0, 0, 0, 0, 3, 17, 0, 4, 0, 0, 1, 0, 2, 0, 0, 11, 2, 0, 0, 0, 0, 1, 9, 1, 0, 0, 0, 0, 1, 0, 0, 4, 0, 1, 5, 2, 4, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    # 'OTHER' : [9, 10, 6, 15, 10, 11, 25, 8, 13, 4, 4, 3, 8, 15, 8, 3, 12, 9, 4, 3, 5, 28, 4, 13, 8, 13, 33, 11, 30, 4, 10, 12, 10, 3, 5, 3, 24, 6, 4, 7, 3, 11, 5, 8, 23, 7, 7, 40, 30, 67, 56, 16, 5, 16, 1, 5, 3, 2, 3, 10, 9, 15, 13, 7, 3, 9, 7, 15, 27, 3, 25, 3, 8, 51, 23, 5, 16, 4, 2, 18, 1, 21, 22, 24, 12, 14, 11, 33, 3, 13, 16, 7, 20, 14, 8, 42, 2, 12, 0, 7, 4, 4, 20, 7, 9, 4, 5, 11, 12, 6, 8, 6, 0, 3, 11, 8, 10, 5, 1, 4, 15, 8, 7, 37, 10, 10, 21, 18, 7, 5, 12, 12, 7, 1, 56, 16, 13, 5, 5, 21, 23, 16, 11, 5, 5, 17, 9, 10, 27, 7, 42, 26, 14, 11, 9, 13, 4, 8, 11, 6, 11, 0, 4, 7, 3, 4, 18, 8, 5, 4, 3, 53, 16, 15, 21, 24, 8, 17, 11, 17],
    'QUESTION' : [0, 0, 0, 0, 1, 2, 0, 1, 0, 2, 1, 0, 2, 2, 0, 1, 9, 4, 1, 1, 0, 2, 0, 2, 0, 0, 9, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 1, 0, 6, 1, 6, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 1, 1, 2, 0, 0, 0, 0, 0, 2, 0, 4, 4, 0, 0, 0, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 3, 1, 0, 0, 0, 3, 0, 2, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 2, 0, 1, 0, 0, 3, 1, 0, 1, 0, 0, 0, 0, 3, 1, 0, 1, 0, 0, 1, 2, 2, 0, 1, 2, 0, 0, 5, 0, 2, 0, 0, 1, 3, 1, 0, 1, 0, 0, 0, 2, 1, 0, 3, 0, 0, 0, 0, 0, 2, 0, 0, 0, 1, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1],
    'elab' : [37, 22, 18, 45, 31, 33, 88, 29, 38, 33, 23, 30, 39, 35, 37, 23, 40, 28, 17, 18, 34, 61, 10, 38, 30, 87, 108, 25, 60, 10, 27, 43, 28, 19, 12, 38, 81, 24, 14, 19, 21, 30, 9, 38, 58, 30, 49, 112, 52, 159, 153, 68, 27, 33, 14, 15, 22, 3, 16, 34, 31, 33, 41, 25, 29, 17, 23, 38, 82, 10, 70, 5, 31, 123, 105, 23, 30, 11, 6, 46, 25, 52, 52, 52, 35, 62, 27, 53, 18, 39, 64, 28, 66, 50, 18, 105, 18, 37, 7, 23, 21, 26, 49, 41, 28, 26, 13, 49, 44, 21, 31, 7, 6, 9, 44, 36, 29, 12, 6, 10, 37, 18, 22, 95, 26, 27, 39, 56, 39, 19, 29, 44, 40, 11, 165, 82, 89, 17, 29, 59, 90, 48, 18, 28, 17, 35, 17, 13, 96, 19, 27, 76, 35, 26, 26, 25, 13, 5, 26, 15, 33, 7, 14, 13, 8, 9, 44, 30, 24, 25, 20, 150, 32, 50, 53, 48, 21, 34, 29, 26],
    'temp' : [0, 3, 0, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 0, 0, 1, 1, 1, 1, 2, 4, 12, 3, 0, 0, 1, 3, 0, 8, 1, 0, 2, 7, 1, 1, 0, 0, 3, 7, 0, 4, 1, 1, 2, 1, 5, 5, 1, 1, 0, 0, 0, 2, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 3, 4, 0, 2, 2, 8, 0, 1, 2, 2, 1, 1, 0, 0, 1, 5, 1, 1, 0, 7, 1, 0, 1, 1, 0, 1, 6, 0, 4, 1, 4, 0, 1, 1, 1, 1, 6, 0, 0, 3, 5, 16, 0, 4, 1, 0, 3, 0, 4, 0, 2, 1, 3, 0, 1, 1, 3, 1, 0, 1, 3, 1, 0, 1, 2, 0, 1, 4, 19, 22, 0, 0, 4, 5, 0, 1, 0, 0, 5, 1, 4, 10, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 12, 0, 0, 0, 12, 2, 2, 7, 2, 2, 0, 0, 0],
    've' : [3, 0, 0, 4, 3, 4, 1, 0, 5, 2, 0, 1, 3, 1, 3, 1, 1, 1, 3, 2, 0, 3, 0, 1, 0, 10, 5, 0, 5, 1, 0, 2, 1, 0, 0, 1, 1, 1, 0, 0, 0, 2, 0, 3, 2, 2, 2, 4, 5, 11, 10, 2, 1, 2, 0, 0, 2, 0, 0, 0, 2, 1, 3, 1, 1, 2, 0, 4, 9, 1, 2, 1, 0, 7, 5, 2, 0, 0, 0, 1, 1, 1, 0, 1, 2, 2, 5, 0, 1, 0, 3, 3, 1, 2, 0, 4, 0, 1, 0, 1, 0, 2, 0, 3, 1, 2, 0, 2, 0, 1, 2, 0, 2, 0, 0, 1, 1, 1, 0, 0, 2, 1, 0, 3, 0, 0, 1, 2, 1, 1, 0, 1, 2, 0, 7, 7, 6, 0, 0, 3, 6, 3, 2, 3, 1, 3, 2, 1, 4, 1, 3, 6, 2, 1, 0, 5, 1, 1, 0, 1, 3, 0, 1, 2, 2, 1, 0, 3, 1, 1, 3, 11, 4, 4, 0, 1, 1, 6, 4, 1],
    'ce' : [2, 4, 3, 8, 1, 4, 5, 0, 1, 0, 4, 4, 4, 0, 6, 3, 3, 1, 7, 2, 5, 7, 1, 2, 4, 12, 10, 0, 4, 1, 3, 3, 6, 1, 0, 3, 6, 3, 5, 0, 4, 7, 3, 2, 4, 4, 2, 4, 3, 9, 13, 5, 4, 2, 1, 0, 3, 0, 3, 2, 4, 4, 6, 2, 4, 1, 3, 5, 8, 1, 2, 1, 2, 7, 12, 2, 0, 1, 0, 2, 3, 3, 4, 2, 2, 10, 5, 3, 3, 4, 2, 6, 3, 1, 2, 9, 2, 5, 1, 1, 2, 3, 4, 4, 2, 3, 1, 2, 3, 0, 0, 1, 5, 1, 3, 4, 7, 5, 0, 0, 5, 2, 0, 4, 1, 0, 0, 5, 0, 4, 10, 3, 1, 2, 15, 19, 10, 0, 0, 9, 8, 5, 3, 2, 0, 8, 4, 0, 6, 0, 12, 15, 5, 0, 3, 6, 1, 3, 2, 1, 5, 0, 4, 8, 1, 5, 4, 3, 2, 5, 0, 14, 0, 2, 3, 1, 2, 2, 0, 4],
    # 'same' : [0, 2, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 3, 0, 1, 0, 1, 0, 1, 1, 10, 0, 3, 1, 4, 8, 1, 1, 1, 1, 2, 2, 0, 0, 0, 5, 1, 1, 2, 0, 0, 0, 0, 0, 1, 1, 2, 1, 16, 12, 2, 0, 4, 1, 0, 0, 0, 1, 2, 0, 2, 5, 1, 0, 1, 2, 0, 1, 2, 7, 0, 0, 1, 1, 0, 2, 1, 0, 2, 0, 0, 2, 2, 2, 1, 1, 3, 1, 0, 5, 0, 0, 4, 2, 2, 0, 4, 0, 0, 2, 2, 1, 0, 0, 0, 2, 2, 3, 0, 2, 1, 0, 0, 2, 1, 0, 0, 0, 1, 1, 2, 1, 4, 4, 2, 3, 5, 1, 1, 0, 1, 0, 1, 13, 3, 4, 0, 1, 0, 6, 4, 4, 1, 0, 4, 0, 1, 3, 1, 0, 3, 2, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],
    'contr' : [0, 1, 1, 2, 2, 0, 8, 1, 2, 2, 4, 2, 3, 0, 0, 3, 6, 4, 3, 2, 3, 3, 2, 1, 0, 5, 2, 1, 3, 0, 2, 4, 1, 0, 1, 2, 2, 1, 3, 2, 2, 2, 0, 3, 7, 3, 2, 8, 12, 10, 14, 2, 1, 0, 0, 7, 1, 0, 0, 0, 3, 2, 0, 1, 3, 2, 4, 2, 4, 1, 8, 0, 1, 6, 5, 1, 3, 1, 2, 6, 2, 3, 3, 6, 4, 9, 0, 1, 1, 3, 2, 2, 3, 1, 1, 2, 0, 2, 0, 2, 1, 1, 2, 2, 1, 0, 0, 3, 1, 0, 2, 0, 2, 0, 3, 3, 8, 0, 0, 0, 3, 0, 0, 5, 0, 0, 0, 0, 2, 3, 0, 1, 4, 0, 3, 5, 1, 1, 4, 0, 5, 0, 4, 2, 1, 0, 4, 1, 2, 1, 2, 7, 3, 0, 1, 2, 1, 0, 4, 0, 3, 0, 0, 2, 1, 1, 1, 2, 3, 2, 0, 5, 3, 0, 1, 1, 0, 1, 2, 0],
    'sim' : [1, 2, 3, 6, 2, 3, 5, 1, 3, 4, 0, 4, 1, 3, 1, 5, 2, 3, 0, 5, 3, 7, 0, 2, 2, 8, 26, 5, 7, 0, 6, 2, 0, 2, 1, 4, 1, 0, 0, 1, 3, 8, 1, 3, 2, 1, 5, 7, 4, 9, 22, 0, 2, 3, 0, 1, 2, 1, 1, 3, 3, 3, 1, 2, 4, 5, 2, 11, 8, 1, 10, 1, 1, 7, 3, 4, 2, 0, 1, 0, 1, 11, 5, 6, 5, 5, 4, 4, 2, 6, 8, 2, 3, 2, 1, 5, 0, 3, 0, 4, 1, 0, 7, 3, 2, 4, 0, 5, 0, 0, 3, 0, 1, 0, 4, 0, 2, 0, 1, 0, 1, 0, 0, 2, 2, 1, 0, 2, 0, 0, 10, 2, 0, 0, 1, 1, 2, 2, 3, 0, 4, 1, 3, 6, 1, 0, 3, 3, 0, 1, 1, 1, 0, 4, 2, 5, 0, 0, 1, 0, 4, 0, 0, 3, 1, 1, 2, 0, 1, 1, 7, 20, 2, 5, 4, 4, 3, 6, 5, 6],
    'attr' : [4, 3, 0, 5, 2, 9, 15, 0, 2, 0, 2, 2, 1, 2, 7, 0, 6, 0, 1, 3, 6, 16, 1, 1, 4, 5, 3, 8, 8, 0, 6, 14, 5, 0, 6, 1, 19, 7, 3, 6, 1, 0, 2, 5, 13, 8, 0, 5, 13, 14, 31, 12, 3, 0, 3, 4, 1, 0, 6, 5, 3, 13, 4, 3, 0, 1, 3, 4, 8, 0, 5, 1, 3, 18, 5, 0, 2, 5, 0, 5, 1, 2, 16, 15, 8, 22, 3, 7, 0, 1, 9, 1, 1, 2, 0, 21, 7, 3, 0, 3, 5, 0, 7, 15, 4, 0, 1, 10, 0, 3, 4, 3, 2, 3, 8, 7, 0, 3, 3, 0, 0, 1, 7, 15, 2, 3, 8, 9, 0, 0, 0, 8, 10, 2, 30, 0, 2, 2, 0, 16, 18, 9, 0, 0, 7, 13, 0, 15, 3, 8, 14, 8, 13, 5, 0, 0, 1, 4, 0, 0, 0, 2, 1, 1, 2, 0, 7, 16, 3, 0, 5, 33, 8, 12, 11, 7, 8, 2, 0, 0],
    'examp' : [0, 0, 1, 3, 0, 0, 1, 1, 4, 2, 0, 2, 0, 0, 0, 0, 0, 1, 0, 4, 1, 0, 0, 0, 0, 0, 3, 1, 4, 0, 2, 2, 0, 0, 1, 0, 2, 0, 1, 2, 0, 0, 0, 0, 0, 3, 0, 6, 3, 4, 8, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 2, 1, 0, 1, 0, 1, 4, 0, 0, 11, 2, 0, 1, 0, 0, 2, 1, 4, 0, 1, 0, 0, 3, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 4, 0, 0, 0, 0, 10, 1, 0, 0, 0, 2, 1, 0, 0, 2, 0, 0, 0, 3, 0, 0, 1, 0, 0, 2, 2, 0, 0, 2, 3, 0, 0, 9, 0, 1, 0, 0, 3, 5, 0, 2, 6, 0, 0, 1, 3, 11, 0, 8, 2, 1, 1, 1, 5, 3, 0, 5, 0, 5, 0, 1, 1, 0, 0, 3, 0, 2, 0, 1, 0, 0, 1, 3, 0, 0, 0, 5, 3],
    'cond' : [1, 2, 2, 6, 2, 1, 2, 1, 1, 2, 0, 1, 2, 2, 0, 3, 0, 0, 0, 2, 0, 1, 0, 4, 2, 1, 2, 0, 0, 0, 1, 3, 0, 4, 0, 1, 2, 0, 0, 0, 2, 2, 0, 2, 4, 0, 4, 0, 0, 9, 4, 0, 1, 1, 0, 0, 2, 0, 0, 0, 1, 0, 1, 0, 1, 4, 1, 1, 5, 1, 3, 0, 0, 3, 1, 0, 0, 3, 0, 1, 0, 0, 0, 1, 1, 1, 2, 2, 2, 4, 3, 0, 2, 0, 0, 2, 0, 2, 0, 4, 1, 2, 0, 0, 1, 2, 0, 0, 1, 0, 1, 1, 0, 0, 7, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 2, 1, 1, 1, 0, 0, 0, 4, 1, 1, 0, 0, 0, 2, 0, 3, 1, 0, 0, 1, 0, 1, 0, 2, 5, 0, 0, 2, 0, 0, 0, 2, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 3, 9, 1, 0, 0, 0, 0, 3, 0, 0],
    # 'rep' : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    'gen' : [1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 1, 0, 2, 1, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 2, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0]
}


X_full = np.array(list(all_matrix.values())).T #180 rows (each doc), with 23 columns (annotations)
print(X_full.shape)

## DUMMY DATA

# X, y_true = make_blobs(n_samples=300, centers=4,
#                        cluster_std=0.60, random_state=0)
# plt.scatter(X[:, 0], X[:, 1], s=50)
# print(X.shape, y_true)
# plt.show()

## FIRST ATTEMPT LOL
# km = KMeans(n_clusters=2, init='k-means++', max_iter=1000, n_init=10, verbose=True)
# km.fit(X_full)
# y_kmeans = km.predict(X_full)
# plt.scatter(X_full[:, 0], X_full[:, 1], c=y_kmeans, s=50, cmap='viridis')
# centers = km.cluster_centers_
# plt.scatter(centers[:, 0], centers[:, 1], c='black', s=200, alpha=0.5)
# print(X_full[:, 0], X_full[:, 1])
# plt.show()

## FOLLOWING THIS TUTORIAL https://hdbscan.readthedocs.io/en/latest/basic_hdbscan.html
import hdbscan
clusterer = hdbscan.HDBSCAN()
clusterer.fit(X_full)

labels_probs = list(zip(clusterer.labels_, clusterer.probabilities_))
id_labels_probs = dict(zip(ids, labels_probs))
# print('labels: ', labels_probs)
print('number of docs in clusters: ', len([t for t in labels_probs if t[0]!=-1]))

print('clusters: ', set(clusterer.labels_))
cluster_0 = {k:v for k,v in id_labels_probs.items() if v[0]==0} 
cluster_1 = {k:v for k,v in id_labels_probs.items() if v[0]==1} 

#cluster_0 ::= {doc_id : [(bounded event, 3), (basic state, 1)])

narrarg = list(zip(narratives, arguments))

cluster0_narrarg = []
for doc_id in cluster_0.keys():
    index = id_to_index[doc_id]
    cluster0_narrarg.append(narrarg[index])
print(Counter(cluster0_narrarg).most_common(6))

cluster1_narrarg = []
for doc_id in cluster_1.keys():
    index = id_to_index[doc_id]
    cluster1_narrarg.append(narrarg[index])
print(Counter(cluster1_narrarg).most_common(6)) #((1,0),3) means there are three docs with just narrative


cluster_0_ann = []
for doc_id in cluster_0.keys():
    vector = []
    index = id_to_index[doc_id]
    for k,v in all_matrix.items():
        if v[index] >= 0:
            vector.append((k, v[index]))
    cluster_0_ann.append(vector)

cluster_1_ann = []
for doc_id in cluster_1.keys():
    vector = []
    index = id_to_index[doc_id]
    for k,v in all_matrix.items():
        if v[index] >= 0:
            vector.append((k, v[index]))
    cluster_1_ann.append(vector)

# print(cluster_0_ann) # [[(basic state, 3), (coerced state, 5)], [(basic state, 2), (coerced state, 0)]]
# print(cluster_1_ann)


## Sum up counts of each type for each cluster 
## I know this is not the most space/time efficient way but yeah
types_and_counts0 = {}
for l in cluster_0_ann:
    for t in l:
        if t[0] in types_and_counts0.keys():
            types_and_counts0[t[0]] += t[1]
        else:
            types_and_counts0[t[0]] = t[1]

types_and_counts1 = {}
for l in cluster_1_ann:
    for t in l:
        if t[0] in types_and_counts1.keys():
            types_and_counts1[t[0]] += t[1]
        else:
            types_and_counts1[t[0]] = t[1]

# print(types_and_counts0) # {annotation: count}

## select which columns to show, merge some
types_and_counts0['BOUNDED EVENT'] = types_and_counts0['BOUNDED EVENT (SPECIFIC)'] + types_and_counts0['BOUNDED EVENT (GENERIC)']
types_and_counts1['BOUNDED EVENT'] = types_and_counts1['BOUNDED EVENT (SPECIFIC)'] + types_and_counts1['BOUNDED EVENT (GENERIC)']
del types_and_counts0['BOUNDED EVENT (SPECIFIC)']
del types_and_counts0['BOUNDED EVENT (GENERIC)']
del types_and_counts1["BOUNDED EVENT (SPECIFIC)"]
del types_and_counts1["BOUNDED EVENT (GENERIC)"]    

types_and_counts0['COERCED STATE'] = types_and_counts0['COERCED STATE (SPECIFIC)'] + types_and_counts0['COERCED STATE (GENERIC)']
types_and_counts1['COERCED STATE'] = types_and_counts1['COERCED STATE (SPECIFIC)'] + types_and_counts1['COERCED STATE (GENERIC)']
del types_and_counts0['COERCED STATE (SPECIFIC)']
del types_and_counts0['COERCED STATE (GENERIC)']
del types_and_counts1["COERCED STATE (SPECIFIC)"]
del types_and_counts1["COERCED STATE (GENERIC)"]    

types_and_counts0['GENERIC SENTENCE'] = types_and_counts0['GENERIC SENTENCE (STATIC)'] + types_and_counts0['GENERIC SENTENCE (DYNAMIC)'] + types_and_counts0['GENERIC SENTENCE (HABITUAL)']
types_and_counts1['GENERIC SENTENCE'] = types_and_counts1['GENERIC SENTENCE (STATIC)'] + types_and_counts1['GENERIC SENTENCE (DYNAMIC)'] + types_and_counts1['GENERIC SENTENCE (HABITUAL)']
del types_and_counts0['GENERIC SENTENCE (STATIC)']
del types_and_counts0['GENERIC SENTENCE (DYNAMIC)']
del types_and_counts0['GENERIC SENTENCE (HABITUAL)']
del types_and_counts1['GENERIC SENTENCE (STATIC)']
del types_and_counts1['GENERIC SENTENCE (DYNAMIC)']
del types_and_counts1['GENERIC SENTENCE (HABITUAL)']   

del types_and_counts0['UNBOUNDED EVENT (SPECIFIC)']
del types_and_counts1['UNBOUNDED EVENT (SPECIFIC)']
del types_and_counts0['elab']
del types_and_counts1['elab']
del types_and_counts0['GENERALIZING SENTENCE (DYNAMIC)']
del types_and_counts1['GENERALIZING SENTENCE (DYNAMIC)']

del types_and_counts0['PERFECT COERCED STATE (SPECIFIC)']
del types_and_counts1['PERFECT COERCED STATE (SPECIFIC)']
del types_and_counts0['PERFECT COERCED STATE (GENERIC)']
del types_and_counts1['PERFECT COERCED STATE (GENERIC)']

del types_and_counts0['examp']
del types_and_counts1['examp']
del types_and_counts0['gen']
del types_and_counts1['gen']
del types_and_counts0['QUESTION']
del types_and_counts1['QUESTION']


items0 = sorted(list(types_and_counts0.items()), key=lambda t: t[0])
keys0 = [t[0] for t in items0]
values0 = [t[1] for t in items0]

items1 = sorted(list(types_and_counts1.items()), key=lambda t: t[0])
keys1 = [t[0] for t in items1]
values1 = [t[1] for t in items1]

assert(keys0 == keys1)

keys0[keys0.index('BASIC STATE')] = 'Basic State'
keys0[keys0.index('BOUNDED EVENT')] = 'Bounded Event'
keys0[keys0.index('COERCED STATE')] = 'Coerced State'
keys0[keys0.index('GENERIC SENTENCE')] = 'Generic Sentence'
keys0[keys0.index('attr')] = 'Attribution'
keys0[keys0.index('ce')] = 'Cause-effect'
keys0[keys0.index('cond')] = 'Condition'
keys0[keys0.index('contr')] = 'Contrast'
keys0[keys0.index('sim')] = 'Similarity'
keys0[keys0.index('temp')] = 'Temporal Sequence'
keys0[keys0.index('ve')] = 'Violated Expectation'

## Plotting both cluster distributions
x = np.arange(len(keys0))  # the label locations
width = 0.35  # the width of the bars
fig, ax = plt.subplots()
rects1 = ax.bar(x - width/2, values0, width, label='Cluster 1  ("Narratives")', color='#B0251A', alpha=0.85)
rects2 = ax.bar(x + width/2, values1, width, label='Cluster 2 ("Arguments")', color='#4a372b', alpha=0.85) #F6C851

plt.rcParams['font.family'] = 'sans-serif'
plt.rcParams['font.sans-serif'] = ['Computer Modern Sans Serif']

# Add some text for labels, title and custom x-axis tick labels, etc.
ax.set_ylabel('Number of Annotations in Cluster', fontsize=15, fontweight='black', color = '#333F4B')
ax.set_xlabel('Annotation Type', fontsize=15, fontweight='black', color = '#333F4B')

fig.tight_layout()
plt.subplots_adjust(left=0.1, right=0.95, top=0.958, bottom=0.25)

# change the style of the axis spines
ax.spines['top'].set_visible(False)
ax.spines['right'].set_visible(False)

ax.spines['left'].set_bounds((0, 100))
ax.spines['bottom'].set_bounds((-1, len(keys0)))

ax.spines['left'].set_position(('outward', 8))
ax.spines['bottom'].set_position(('outward', 5))

plt.xticks(x, keys0, rotation=45, ha='right', fontsize=13)
ax.legend(fontsize=15)

plt.show()